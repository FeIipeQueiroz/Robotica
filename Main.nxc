/*********************************************************************
*                           PBL 1 - Robótica.
* Desenvolvido por: Alisson Rodruigues, Felipe Queiroz,
*           Lara Esquivel e Paulo Queiroz.
*
*********************************************************************/

/*O comando Fwd roda o robô para trás, já que definimos a sua "frente"
o lado em que o sensor de luz está*/

// BTcheck e bluetoothstatus
// Ver direito na documentação
task main()
{
 /* Reflexão das cores: !!ALTERA A CADA EXECUÇÃO!!
 *  Branco: 75 e 76
 *  Preto: >50
 *  Prata: 86, 87
 *  Vermelho: 75
 *  Amarelo: 76
 *  Azul: 46 a 65
 */
 SetSensorLight(IN_3, true);
 SetSensorTouch(IN_2);
 SetSensorUltrasonic(IN_4);

 int state = 0;
 int test = 0;
 bool init = false;
 //OnRevSync(OUT_AC, 50, -100);

 //if(SENSOR_2 == 1){
  //init = true;
 //}

  while(true){
  OnRev(OUT_AC, 75);
  
   /*if(25 > SensorUS(IN_4)){
    //PlaySound(SOUND_FAST_UP);
    Off(OUT_AC);
    Wait(1000);
    OnRevSync(OUT_AC, 50, -100);
    Wait(1200);
    OnRevSync(OUT_AC, 50, 100);
    Wait(2400);
    //aq tem q ter um if pra determinar se é parede
    /*OnRevSync(OUT_AC, 50, -100);
    Wait(2400);
    // se n tiver parede ele roda e pega com a garra :D
    OnRevSync(OUT_AC, 50, 100);
    Wait(1200);
    Off(OUT_AC);
    OnRev(OUT_B, 40);
    Wait(320); //Assim ele n força a roda
    Off(OUT_B);
    test = 3;

   } */
   if(Sensor(IN_3) < 55)
   {
       test = 1;
   }
   
   if(test == 1){
     OnFwd(OUT_AC, 100);
     Wait(1000);
     test = 2;
   }
   
   if(test == 2){
     OnRevSync(OUT_AC, 50, -100);
     Wait(1200);
     OnRev(OUT_AC,50);
     Wait(1000);
     OnRevSync(OUT_AC, 50, 100);
     Wait(1200);
     test = 0;
   }
   if(test == 3){
     OnFwd(OUT_AC, 50);
     Wait(900);
     OnFwd(OUT_B, 40);
     break;
   }
 }

 /*
 * OnRevSync e OnFwdSync: rotaciona os motores sincronizados
 * o 3° paramétro "turnpct" define a taxa de rotação das rodas:
 * 100 rotaciona o robô para direita, no próprio eixo.
 * -100 rotaciona o robô para esquerda, no próprio eixo.
 */
 
 //OnRevSync(OUT_AC, 50, -100);

 //}
}
